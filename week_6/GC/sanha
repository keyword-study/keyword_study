GC?
자바의 메모리 관리 방법 중의 하나로 JVM의 heap영역에서 동적으로 할당했던 메모리 중 끊어진 메모리를 주기적으로 제거하는 프로세스를 말한다.

단점
메모리가 언제 해제되는지 정확하게 알 수 없어 제어가 힘들다.
GC가 동작하는 동안 다른 동작을 멈추기 때문에 오버헤드가 발생된다.(STW)

가비지 컬렉션 대상
객체의 상태는 2가지가 있다.
Reachable : 객체가 참조되고 있는 상태
Unreachable : 객체가 참조되고 있지 않은 상태
"Unreachable" 상태가 GC의 대상이 된다.

가비지 컬렉션 청소 방식
"Mark And Sweep"이라는 알고리즘을 이용하여 청소를 한다.
Root Space -> Heap 메모리 영역을 참조하는 method area, static 변수, stack, native method stack
MARK : Root Space에 존재하는 객체들을 찾아 어떤 객체를 참조하고 있는지 찾아서 마킹한다(Reachable 객체와 Unreachable객체를 분류하는 작업)
Sweep : Unreachable 객체를 삭제하는 작업
Compact: Reachable 객체를 압축하는 작업

Heap 영역은 크게 2가지로 나눈다
-Young Generation -> 새롭게 생성된 객체가 할당되는 영역 / 해당 영역은 Minor GC라고 부른다
    -Eden -> new 를 통해 새로 생성된 객체가 존재
    -Survival 0 -> 최소 1번 GC에 살아남은 객체 / 특별한 규칙이 있는데 Survivor0 Survivor1 둘중 하나는 꼭 비어 있어야 한다.
    -Survival 1
-Old Generation -> Young영역보다 크게 사이즈가 크게 할당되며 사이즈가 큰 만큼 Young 영역보다 가비지는 적게 발생 / Major GC 또는 Full GC라고 부른다.
? 큰 객체들은 Old 영역에 할당된다..?

과정
방법은 직접 공유!

Parallel Old GC
CMS GC
G1 GC
Shenandoah GC











