시작하기 전 궁금증
동시성 제어를 왜 레디스를 이용할까? 
 1. 레디스의 어떤 특성 때문에 레디스를 이용할까?
 2. 다른 서드파티를 이용하여 해결은 불가능한가?
 3. 자바로만 이용하여 처리하는 방법

LOCK?
-> 트랜잭션 처리의 순차성을 보장하기 위한 방법 
두 개의 DB세션이 Patient table을 동시에 수정하려고 하는 상황엔 트랜잭션의 "원자성"이 무너진다. 이 원자성을 보존하기 위해 LOCK을 사용한다.

DB에서 데이터 수정은 DB Lock을 가진 *session만 가능하다. 데이터를 수정하기 위해 접근하면 세션은 DB Lock을 얻을 수 있는지 확인하며 가능하면 흭득한다. 그리고 트랜잭션이 커밋될 때 DB Lock을 반납한다. 
*session?
-> 데이터베이스에 대한 연산을 실행하는 논리적인 단위
1. DB접속을 시작으로 종료하기 까지 전체기간을 의미 
2. 사용자 -> 커넥션 -> 세션

LOKC 종류?
1. Shared Lock (공유 Lock 또는 Read Lock)
2. Exclusive Lock(배타적 Lock 또는 Write Lock)

Shared Lock?
-> 공유 Lock끼리는 동시에 접근이 가능하다. 하나의 데이터를 읽는 것은 여러 사용자가 동시에 할 수 있다.

Exclusive Lock?
-> 데이터를 변경하고자 할 때 사용되며, 트랜잭션이 완료될 때까지 유지. Exclusive Lock이 해제될 때 까지 다른 트랜잭션은 해당 리소스에 접근할 수 없다. 




 
    






