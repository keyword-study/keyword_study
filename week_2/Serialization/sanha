serialization?
-> 메모리를 디스크에 저장하거나 네트워크 통신에 사용하기 위한 형식으로 변환하는 것
deserialization?
-> 디스크에 저장한 데이터를 읽거나, 네트워크 통신으로 받은 데이터를 메모리에 쓸 수 있도록 다시 변환

그럼 java 직렬화는? 
-> 자바 시스템 내부에서 사용되는 객체 또는 데이터를 외부의 자바 시스템에서도 사용할 수 있도록 바이트 형태로 데이터 변환하는 기술 

직렬화가 필요한 이유?
디스크에 저장하거나 통신에는 *Value Type만 가능하다. 
어떤 프로그래밍 언어든 데이터들의 메모리 구조는 크게 2가지가 있다. 
1. Value Type -> JAVA 기준으로 8가지가 있다. (byte, short,int, long, float, double, char, boolean) 해당 타입은 값이 스택에 쌓이며 직접 접근이 가능하다.
2. Reference Type  -> 객체, String 등 힙에 메모리가 할당되고 스택에 메모리 번지주소가 담긴다. -> 해당 이유 떄문에 참조타입은 직렬화를 통해 주소값이 가지는 데이터들을 전부 모아 Value type 데이터로 변환한다.






